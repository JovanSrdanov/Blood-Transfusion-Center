server.port=8080
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:postgresql://localhost:5432/bloodbank
spring.datasource.username=postgres
spring.datasource.password=password
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true
# Show SQL queries
# spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.show-sql = true
## za email
spring.mail.host=smtp.gmail.com
spring.mail.username=psw.integrations.g4@gmail.com
spring.mail.password=mcezencvkdktyarh
spring.mail.port=587
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp
## Za Scheduling
resetPenalties.cron=0 30 7 1 * *
## 0  sekundi, 30 minuta , 7 sati, 1. dan u mesecu , svakog meseca, svakod dana (PON-NED)
## GPS
demandBloodShipment=demandBloodShipment
approvedBloodShipment=approvedBloodShipment
bloodShipmentArrived=bloodShipmentArrived
setGPSCoordinates=setGPSCoordinates
getCurrentGPSCoordinates=getCurrentGPSCoordinates
helicopterArrived=helicopterArrived
letterbox=letterbox
letterbox2=letterbox2
## Delivery contract
createContract=createContract
deliveryResponse=deliveryResponse
#logging.level.org.springframework.transaction.interceptor = trace
spring.jpa.show-sql=false
spring.cache.jcache.config=classpath:ehcache.xml
## Rate limiting
resilience4j.ratelimiter.instances.loginService.limit-for-period=3
resilience4j.ratelimiter.instances.loginService.limit-refresh-period=1s
resilience4j.ratelimiter.instances.loginService.timeout-duration=0
resilience4j.ratelimiter.instances.loginService.register-health-indicator=true
resilience4j.ratelimiter.instances.loginService.event-consumer-buffer-size=100
# Actuator endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.ratelimiters.enabled=true

# Connection pool
#minimum number of idle connections maintained by HikariCP in a connection pool(maximum/4)
spring.datasource.hikari.minimumIdle=4
#maximum pool size - our server: CPU with 4 cores and HDD with one R/W head: 4*2 + 1 = 9
spring.datasource.hikari.maximumPoolSize=10
#maximum idle time for connection - when connection number reached minimumIdle number no more connections will be closed
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
# maximum lifetime in milliseconds of a connection in the pool after it is closed.
spring.datasource.hikari.maxLifetime=2000000
#maximum number of milliseconds that a client will wait for a connection minimum is 250ms, default is 30000
spring.datasource.hikari.connectionTimeout=30000
# LOGGING for connection pool
logging.level.com.zaxxer.hikari = debug
#shows sql queries
#logging.level.org.hibernate.SQL=DEBUG
#Shows configuration of pool at startup
#logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
















